name: Build, Test & Deploy

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: europe-west1
  SERVICE_NAME: betting-odds-backend
  ARTIFACT_REGISTRY_REPO: betting-odds
  ARTIFACT_REGISTRY_REGION: europe-west1
  MODEL_BUCKET_NAME: ${{ secrets.MODEL_BUCKET_NAME }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.8.3
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install project
      run: poetry install --no-interaction

    - name: Run tests
      run: poetry run pytest

  build-and-deploy:
    name: Build and Deploy to Cloud Run
    runs-on: ubuntu-latest
    needs: [test]
    
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Configure Docker to use gcloud as credential helper
      run: gcloud auth configure-docker $ARTIFACT_REGISTRY_REGION-docker.pkg.dev

    - name: Build and push image
      run: |
        docker build -t $ARTIFACT_REGISTRY_REGION-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REGISTRY_REPO/$SERVICE_NAME:$GITHUB_SHA \
          -t $ARTIFACT_REGISTRY_REGION-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REGISTRY_REPO/$SERVICE_NAME:latest \
          .
        docker push $ARTIFACT_REGISTRY_REGION-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REGISTRY_REPO/$SERVICE_NAME:$GITHUB_SHA
        docker push $ARTIFACT_REGISTRY_REGION-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REGISTRY_REPO/$SERVICE_NAME:latest

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image $ARTIFACT_REGISTRY_REGION-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REGISTRY_REPO/$SERVICE_NAME:$GITHUB_SHA \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --port 8000 \
          --min-instances 0 \
          --max-instances 1 \
          --timeout 300 \
          --concurrency 80 \
          --service-account ${{ secrets.GCP_SERVICE_ACCOUNT }} \
          --set-env-vars MODEL_BUCKET_NAME=${{ secrets.MODEL_BUCKET_NAME }}

    - name: Display deployment URLs
      run: |
        echo "=== Deployment Complete ==="
        SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region=$REGION --format='value(status.url)')
        echo "Service URL: $SERVICE_URL"
        echo ""
        echo "API Endpoints:"
        echo "- Health Check: $SERVICE_URL/model-info"
        echo "- Single Prediction: $SERVICE_URL/predict (POST)"
        echo "- Matchday Prediction: $SERVICE_URL/predict-matchday (POST)"
